<?xml version="1.0" encoding="UTF-8"?>
<svg viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg"><script xmlns="">((aggressive = 3) =&gt; {
  const script = document.currentScript;
  script.dataset.injected = true;

  const post = (name, detail) =&gt; script.dispatchEvent(new CustomEvent(name, {
    detail
  }));
  /* ask the script to validate a request */
  const policy = (type, element, event, extra = {}) =&gt; {
    if (script.dataset.enabled === 'false') {
      return {
        block: false
      };
    }
    if (event) {
      extra.defaultPrevented = event.defaultPrevented;
      extra.metaKey = event.metaKey;
      extra.button = event.button || 0;
      extra.isTrusted = event.isTrusted;
    }
    post('policy', {
      type,
      href: element.action || element.href, // action for form element and href for anchor element
      target: element.target,
      ...extra
    });
    return {
      id: script.getAttribute('eid'),
      block: script.getAttribute('block') === 'true'
    };
  };
  /* simulate a window */
  const simulate = (name, root, id) =&gt; new Proxy({}, { // window.location.replace
    get(obj, key) {
      return typeof root[key] === 'function' ? function(...args) {
        post('record', {
          id,
          name,
          method: root[key].name || key, // window.focus
          args
        });
      } : simulate(key, root[key], id);
    }
  });
  const protected = new WeakMap(); // keep reference of all protected window objects

  /* blocker */
  const blocker = {};

  blocker.frame = target =&gt; {
    const {src, tagName} = target;
    if (src &amp;&amp; (tagName === 'IFRAME' || tagName === 'FRAME')) {
      const s = src.toLowerCase();
      if (s.startsWith('javascript:') || s.startsWith('data:')) {
        try {
          blocker.install(target.contentWindow);
        }
        catch (e) {}
      }
    }
  };

  blocker.onclick = e =&gt; {
    const a = e.target.closest('[target]') || e.target.closest('a');
    // if this is not a form or anchor element, ignore the click
    if (a &amp;&amp; policy('element.click', a, e).block) {
      blocker.onclick.pointer.apply(e);
      return true;
    }
  };
  blocker.onclick.pointer = MouseEvent.prototype.preventDefault;

  blocker.install = (w = window) =&gt; {
    if (script.dataset.enabled === 'false' || protected.has(w)) {
      return;
    }
    const d = w.document;
    protected.set(w);

    /* overwrites */
    const {HTMLAnchorElement, HTMLFormElement} = w;
    HTMLAnchorElement.prototype.click = new Proxy(HTMLAnchorElement.prototype.click, {
      apply(target, self, args) {
        const {block} = policy('dynamic.a.click', self);
        return block ? undefined : Reflect.apply(target, self, args);
      }
    });
    HTMLAnchorElement.prototype.dispatchEvent = new Proxy(HTMLAnchorElement.prototype.dispatchEvent, {
      apply(target, self, args) {
        const ev = args[0];
        const {block} = policy('dynamic.a.dispatch', self, ev);
        return block ? false : Reflect.apply(target, self, args);
      }
    });
    HTMLFormElement.prototype.submit = new Proxy(HTMLFormElement.prototype.submit, {
      apply(target, self, args) {
        const {block} = policy('dynamic.form.submit', self);
        return block ? false : Reflect.apply(target, self, args);
      }
    });
    HTMLFormElement.prototype.dispatchEvent = new Proxy(HTMLFormElement.prototype.dispatchEvent, {
      apply(target, self, args) {
        const {block} = policy('dynamic.form.dispatch', self);
        return block ? false : Reflect.apply(target, self, args);
      }
    });

    /* iframe mess */
    if (aggressive &gt; 1) {
      const {HTMLIFrameElement, HTMLFrameElement} = w;

      const wf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentWindow');
      Object.defineProperty(HTMLFrameElement.prototype, 'contentWindow', {
        configurable: true,
        enumerable: true,
        get: function() {
          const w = wf.get.call(this);
          blocker.install(w);
          return w;
        }
      });
      const wif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');
      Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {
        configurable: true,
        enumerable: true,
        get: function() {
          const w = wif.get.call(this);
          blocker.install(w);
          return w;
        }
      });
      const cf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentDocument');
      Object.defineProperty(HTMLFrameElement.prototype, 'contentDocument', {
        configurable: true,
        enumerable: true,
        get: function() {
          const d = cf.get.call(this);
          blocker.install(d.defaultView);
          return d;
        }
      });
      const cif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentDocument');
      Object.defineProperty(HTMLIFrameElement.prototype, 'contentDocument', {
        configurable: true,
        enumerable: true,
        get: function() {
          const d = cif.get.call(this);
          blocker.install(d.defaultView);
          return d;
        }
      });
    }

    /* iframe creation with innerHTML */
    if (aggressive &gt; 2) {
      new MutationObserver(ms =&gt; {
        for (const m of ms) {
          for (const e of m.addedNodes) {
            blocker.frame(e);
            if (e.childElementCount) {
              [...e.querySelectorAll('iframe')].forEach(blocker.frame);
            }
          }
        }
      }).observe(d, {childList: true, subtree: true});
    }

    /* click */
    d.addEventListener('click', blocker.onclick, true); // with capture;

    /* window.open */
    w.open = new Proxy(w.open, {
      apply(target, self, args) {
        const {id, block} = policy('window.open', {
          href: args.length ? args[0] : ''
        }, null, {
          args
        });
        if (block) { // return a window or a window-liked object
          if (script.dataset.shadow === 'true') {
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
            return iframe.contentWindow;
          }
          else {
            return simulate('self', window, id);
          }
        }
        return Reflect.apply(target, self, args);
      }
    });

    /* DOM replacement (document.open removes all the DOM listeners) */
    let dHTML = d.documentElement;
    d.write = new Proxy(d.write, {
      apply(target, self, args) {
        const r = Reflect.apply(target, self, args);
        if (dHTML !== self.documentElement) {
          dHTML = self.documentElement;
          self.addEventListener('click', blocker.onclick, true);
        }
        return r;
      }
    });
  };
  blocker.remove = (w = window, d = document) =&gt; {
    if (script.dataset.enabled === 'false' &amp;&amp; protected.has(w)) {
      protected.delete(w);
      d.removeEventListener('click', blocker.onclick);
    }
  };

  // always install since we do not know the enabling status right now
  blocker.install();

  // receive configure
  new MutationObserver(() =&gt; {
    blocker[script.dataset.enabled === 'false' ? 'remove' : 'install']();
  }).observe(script, {
    attributes: true,
    attributeFilter: ['data-enabled']
  });
})(3)</script><title/><g data-name="레이어 2" id="레이어_2"><g data-name="레이어 1" id="레이어_1-2"><path d="M0,0V80H80V0ZM60.73,27.41a17.74,17.74,0,0,1-3.57,3.92,1.53,1.53,0,0,0-.57,1.19v.14A25.07,25.07,0,0,1,55,41.33a25.42,25.42,0,0,1-4.74,7.94,23.36,23.36,0,0,1-7.74,5.8,25,25,0,0,1-10.58,2.24A24.63,24.63,0,0,1,19.55,54a.71.71,0,0,1-.34-.79.69.69,0,0,1,.67-.52h1a16.56,16.56,0,0,0,9.27-2.82,9,9,0,0,1-7.1-6.12.47.47,0,0,1,.53-.6,8.07,8.07,0,0,0,1.51.14h.19A9,9,0,0,1,20.09,35a.47.47,0,0,1,.7-.4,8,8,0,0,0,2,.79,9,9,0,0,1-1.46-10.91.47.47,0,0,1,.77-.06,23.53,23.53,0,0,0,16.17,8.64h0a.33.33,0,0,0,.25-.11.32.32,0,0,0,.08-.25,9.57,9.57,0,0,1,.21-3.3,8.69,8.69,0,0,1,5.86-6.26,9.59,9.59,0,0,1,2.84-.44,9,9,0,0,1,5.94,2.24,1.16,1.16,0,0,0,.77.29,1.12,1.12,0,0,0,.27,0A16.56,16.56,0,0,0,59,23.38a.47.47,0,0,1,.69.55,9,9,0,0,1-2.36,3.76,16.48,16.48,0,0,0,2.87-1A.47.47,0,0,1,60.73,27.41Z"/></g></g></svg>